--- /home/benjaminm/code/jedi-bundle/quenchxx/src/quenchxx/Geometry.h.tmp.bak	2025-01-18 06:56:55.382721345 +0100
+++ /home/benjaminm/code/jedi-bundle/quenchxx/src/quenchxx/Geometry.h	2024-12-07 08:12:29.858178952 +0100
@@ -21,7 +21,6 @@
 #include "eckit/mpi/Comm.h"
 
 #include "oops/base/GeometryData.h"
-#include "oops/base/Variables.h"
 #include "oops/mpi/mpi.h"
 #include "oops/util/ObjectCounter.h"
 #include "oops/util/parameters/OptionalParameter.h"
@@ -30,11 +29,14 @@
 #include "oops/util/parameters/RequiredParameter.h"
 #include "oops/util/Printable.h"
 
+#include "quenchxx/VariablesSwitch.h"
+
 namespace eckit {
   class Configuration;
 }
 
 namespace quenchxx {
+  class GeometryIterator;
 
 // -----------------------------------------------------------------------------
 /// Orography parameters
@@ -173,7 +175,8 @@
   Geometry(const Geometry &);
 
   // Variables sizes
-  std::vector<size_t> variableSizes(const oops::Variables & vars) const;
+  std::vector<size_t> variableSizes(const varns::Variables & vars) const;
+  std::vector<size_t> variableSizes(const std::vector<std::string> &) const;
 
   // Levels direction
   bool levelsAreTopDown() const
@@ -214,9 +217,24 @@
     {return interpolation_;}
   bool duplicatePoints() const
     {return duplicatePoints_;}
+  const eckit::mpi::Comm & timeComm() const
+    {return eckit::mpi::self();}
+  const std::vector<double> & vert_coord_avg(const std::string & var) const
+    {return groups_[groupIndex_.at(var)].vert_coord_avg_;}
   const oops::GeometryData & generic() const
     {return *geomData_;}
 
+  // Geometry iterator
+  GeometryIterator begin() const;
+  GeometryIterator end() const;
+  std::vector<double> verticalCoord(std::string &) const;
+  const size_t & iteratorDimension() const
+    {return iteratorDimension_;}
+  const size_t & nnodes() const
+    {return nnodes_;}
+  const size_t & nlevs() const
+    {return nlevs_;}
+
  private:
   // Print
   void print(std::ostream &) const;
@@ -284,6 +302,12 @@
   // Duplicate points
   bool duplicatePoints_;
 
+  // Geometry iterator
+  size_t iteratorDimension_;
+  size_t nnodes_;
+  size_t nlevs_;
+  std::vector<double> vert_coord_avg_;
+
   // Geometry data structure
   std::unique_ptr<oops::GeometryData> geomData_;
 };
