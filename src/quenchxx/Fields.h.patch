--- /home/benjaminm/code/oops-bundle/quenchxx/src/quenchxx/Fields.h.tmp.bak	2025-01-28 13:35:39.813325913 +0100
+++ /home/benjaminm/code/oops-bundle/quenchxx/src/quenchxx/Fields.h	2025-01-28 13:36:18.025565106 +0100
@@ -8,20 +8,28 @@
 
 #pragma once
 
+#include <algorithm>
 #include <memory>
 #include <ostream>
 #include <string>
 #include <vector>
 
 #include "atlas/field.h"
+#include "atlas/grid.h"
+#include "atlas/mesh.h"
+#include "atlas/meshgenerator.h"
+
+#include "eckit/serialisation/Stream.h"
 
-#include "oops/base/Variables.h"
 #include "oops/util/DateTime.h"
 #include "oops/util/ObjectCounter.h"
 #include "oops/util/Printable.h"
 #include "oops/util/Serializable.h"
 
+#include "quenchxx/GeoVaLs.h"
 #include "quenchxx/Interpolation.h"
+#include "quenchxx/Locations.h"
+#include "quenchxx/VariablesSwitch.h"
 
 namespace quenchxx {
   class Geometry;
@@ -38,7 +46,7 @@
 
   // Constructors/destructor
   Fields(const Geometry &,
-         const oops::Variables &,
+         const varns::Variables &,
          const util::DateTime &);
   Fields(const Fields &,
          const Geometry &);
@@ -65,6 +73,14 @@
   void random();
   void diff(const Fields &,
             const Fields &);
+  double min(const varns::Variables &) const;
+  double max(const varns::Variables &) const;
+  void interpolate(const Locations &,
+                   GeoVaLs &) const;
+  void interpolateAD(const Locations &,
+                     const GeoVaLs &);
+  void forceWith(const Fields &,
+                 const varns::Variables &);
 
   // ATLAS FieldSet
   void toFieldSet(atlas::FieldSet &) const;
@@ -73,6 +89,7 @@
     {return fset_;}
   atlas::FieldSet & fieldSet()
     {return fset_;}
+  void synchronizeFields();
 
   // Utilities
   void read(const eckit::Configuration &);
@@ -80,7 +97,7 @@
   double norm() const;
   std::shared_ptr<const Geometry> geometry() const
     {return geom_;}
-  const oops::Variables & variables() const
+  const varns::Variables & variables() const
     {return vars_;}
   const util::DateTime & time() const
     {return time_;}
@@ -94,6 +111,10 @@
   void serialize(std::vector<double> &) const;
   void deserialize(const std::vector<double> &,
                    size_t &);
+  friend eckit::Stream & operator<<(eckit::Stream &,
+                                    const Fields &);
+  friend eckit::Stream & operator>>(eckit::Stream &,
+                                    Fields &);
 
   // Grid interpolations
   static std::vector<quenchxx::Interpolation>& interpolations();
@@ -108,11 +129,17 @@
   // Return grid interpolation
   std::vector<quenchxx::Interpolation>::iterator setupGridInterpolation(const Geometry &) const;
 
+  // Return observations interpolation
+  std::vector<quenchxx::Interpolation>::iterator setupObsInterpolation(const Locations &) const;
+
+  // Reduce duplicate points
+  void reduceDuplicatePoints();
+
   // Geometry
   std::shared_ptr<const Geometry> geom_;
 
   // Variables
-  oops::Variables vars_;
+  varns::Variables vars_;
 
   // Time
   util::DateTime time_;
